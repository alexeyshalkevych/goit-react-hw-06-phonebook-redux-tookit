{"version":3,"sources":["redux/contacts/contactsSlice.js","utils/helpers.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","redux/form/formSlice.js","redux/form/formSelectors.js","components/Containers/FormContainer.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/Containers/ContactContainer.js","components/ContactList/ContactList.styled.js","transition/slide.transition.js","components/ContactList/ContactList.js","redux/filter/filterSelectors.js","redux/contacts/contactsSelectors.js","components/Containers/ContactListContainer.js","components/ContactFilter/ContactFilter.styled.js","transition/pop.transition.js","components/ContactFilter/ContactFilter.js","redux/filter/filterSlice.js","components/Containers/ContactFilterContainer.js","components/Phonebook/Phonebook.styled.js","transition/popText.transition.js","components/Phonebook/Phonebook.js","components/Containers/PhonebookContainer.js","components/App/App.js","redux/store.js","index.js"],"names":["contactSlice","createSlice","name","initialState","reducers","GET_ALL_CONTACTS","state","payload","ADD_CONTACT","contact","contacts","find","item","findContact","toast","error","hasStateContact","number","length","trim","match","isInvalidContact","id","uuidv4","DELETE_CONTACT","filter","actions","getAllContacts","addContact","deleteContact","FormContainer","styled","form","Label","label","InputField","input","Button","button","ContactForm","changeInput","resetForm","handleChange","e","target","value","onSubmit","preventDefault","type","onChange","autoComplete","formSlice","RESET_FORM","CHANGE_INPUT","getForm","mapDispatchToProps","connect","ContactContainer","div","ContactName","span","ContactNumber","DeleteButton","Contact","onClick","List","ul","li","Slide","transition","attrs","unmountOnExit","timeout","ContactList","filteredContacts","TransitionGroup","component","map","key","getFilter","getContacts","getContactsWithFilter","createSelector","toLowerCase","includes","PopFilter","ContactFilter","changeFilter","in","filterSlice","CHANGE_FILTER","PhonebookContainer","PhonebookTitle","h1","PhonebookSubTitle","h2","Notification","ToastContainer","SlideTitle","Phonebook","useState","showTitle","setShowTitle","useEffect","persistedContacts","items","localStorage","getItem","JSON","parse","err","Error","getFromLocaleStorage","setItem","stringify","saveToLocaleStorage","autoClose","App","rootReducer","combineReducers","contactsReducer","filterReducer","formReducer","store","configureStore","reducer","composeWithDevTools","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d955608d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport { isInvalidContact, hasStateContact } from '../../utils/helpers';\n\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: [],\n  reducers: {\n    GET_ALL_CONTACTS: (state, { payload }) => [...state, ...payload],\n\n    ADD_CONTACT: (state, { payload }) =>\n      hasStateContact(state, payload) || isInvalidContact(payload)\n        ? state\n        : [...state, { id: uuidv4(), ...payload }],\n\n    DELETE_CONTACT: (state, { payload }) =>\n      state.filter(contact => contact.id !== payload),\n  },\n});\n\nexport const {\n  GET_ALL_CONTACTS: getAllContacts,\n  ADD_CONTACT: addContact,\n  DELETE_CONTACT: deleteContact,\n} = contactSlice.actions;\n\nexport default contactSlice.reducer;\n","import { toast } from 'react-toastify';\n\n/**\n * find data contact\n */\nconst findContact = (contacts, contact) =>\n  contacts.find(item => item.name === contact.name);\n\n/**\n * save to localStorage\n */\nconst saveToLocaleStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    throw new Error();\n  }\n};\n\n/**\n * get data from localStorage\n */\nconst getFromLocaleStorage = key => {\n  try {\n    const items = localStorage.getItem(key);\n\n    return items ? JSON.parse(items) : null;\n  } catch (err) {\n    throw new Error();\n  }\n};\n\n/**\n * check valid contact data\n */\nconst isInvalidContact = ({ name, number }) => {\n  if (name.length <= 1 || name.trim() === 0) {\n    toast.error(`Your name is not valid. Please enter correct information.`);\n    return true;\n  }\n\n  if (!number.match(/^\\(?([0-9]{3})\\)?[- ]?([0-9]{2})[- ]?([0-9]{2})$/)) {\n    toast.error(`Your number is not valid. Please enter correct information.`);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * check for availability data in state\n */\nconst hasStateContact = (state, contact) => {\n  const stateContact = findContact(state, contact);\n\n  if (stateContact) {\n    toast.error(`${contact.name} is already in contacts.`);\n    return true;\n  }\n\n  return false;\n};\n\nexport {\n  findContact,\n  saveToLocaleStorage,\n  getFromLocaleStorage,\n  isInvalidContact,\n  hasStateContact,\n};\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px 5px;\n  font-family: sans-serif;\n  font-size: 14px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(0, 106, 177);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(19, 19, 138);\n  }\n\n  :disabled {\n    cursor: default;\n    background-color: rgb(85, 85, 85);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormContainer, Label, InputField, Button } from './ContactForm.styled';\n\nconst ContactForm = ({ addContact, changeInput, resetForm, form }) => {\n  const { name, number } = form;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    addContact({ name, number });\n\n    resetForm();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    changeInput({ [name]: value });\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputField\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </FormContainer>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  form: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  changeInput: PropTypes.func.isRequired,\n  resetForm: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst formSlice = createSlice({\n  name: 'form',\n  initialState: {\n    name: '',\n    number: '',\n  },\n  reducers: {\n    RESET_FORM: state => ({\n      ...state,\n      name: '',\n      number: '',\n    }),\n\n    CHANGE_INPUT: (state, { payload }) => ({\n      ...state,\n      ...payload,\n    }),\n  },\n});\n\nexport const {\n  RESET_FORM: resetForm,\n  CHANGE_INPUT: changeInput,\n} = formSlice.actions;\n\nexport default formSlice.reducer;\n","const getForm = state => state.form;\n\nexport default getForm;\n","import { connect } from 'react-redux';\nimport ContactForm from '../ContactForm/ContactForm';\nimport { addContact } from '../../redux/contacts/contactsSlice';\nimport { changeInput, resetForm } from '../../redux/form/formSlice';\nimport getForm from '../../redux/form/formSelectors';\n\nconst mapStateToProps = state => ({\n  form: getForm(state),\n});\n\nconst mapDispatchToProps = {\n  addContact,\n  changeInput,\n  resetForm,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactName = styled.span`\n  flex: 1 0 auto;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 50px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: block;\n  padding: 5px 10px;\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: rgb(255, 255, 255);\n  background-color: rgb(218, 1, 1);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(170, 0, 0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContactContainer,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n} from './Contact.styled';\n\nconst Contact = ({ item: { id, name, number }, deleteContact }) => (\n  <ContactContainer>\n    <ContactName>{name}</ContactName>\n    <ContactNumber>{number}</ContactNumber>\n    <DeleteButton type=\"button\" onClick={() => deleteContact(id)}>\n      &#10006;\n    </DeleteButton>\n  </ContactContainer>\n);\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import { connect } from 'react-redux';\nimport Contact from '../Contact/Contact';\nimport { deleteContact } from '../../redux/contacts/contactsSlice';\n\nconst mapDispatchToProps = {\n  deleteContact,\n};\n\nexport default connect(null, mapDispatchToProps)(Contact);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n`;\n","import transition from 'styled-transition-group';\n\nconst Slide = transition.li.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport default Slide;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport Contact from '../Containers/ContactContainer';\nimport { List } from './ContactList.styled';\nimport Slide from '../../transition/slide.transition';\n\nconst ContactList = ({ filteredContacts }) => {\n  return (\n    <TransitionGroup component={List}>\n      {filteredContacts.map(item => (\n        <Slide key={item.id}>\n          <Contact item={item} />\n        </Slide>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default ContactList;\n","const getFilter = state => state.filter;\n\nexport default getFilter;\n","import { createSelector } from 'reselect';\nimport getFilter from '../filter/filterSelectors';\n\nexport const getContacts = state => state.contacts;\n\nexport const getContactsWithFilter = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n","import { connect } from 'react-redux';\nimport ContactList from '../ContactList/ContactList';\nimport { getContactsWithFilter } from '../../redux/contacts/contactsSelectors';\n\nconst mapStateToProps = state => ({\n  filteredContacts: getContactsWithFilter(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst PopFilter = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter {\n    transform: scale(0);\n  }\n\n  &:enter-active {\n    transform: scale(1);\n    transition: transform 250ms ease-in-out;\n  }\n\n  &:exit {\n    transform: scale(1);\n  }\n\n  &:exit-active {\n    transform: scale(0);\n    transition: transform 250ms ease-in-out;\n  }\n`;\n\nexport default PopFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, InputField } from './ContactFilter.styled';\nimport PopFilter from '../../transition/pop.transition';\n\nconst ContactFilter = ({ contacts, filter, changeFilter }) => (\n  <PopFilter in={contacts.length >= 2}>\n    <Label>\n      Find contacts by name\n      <InputField\n        type=\"text\"\n        value={filter}\n        onChange={e => changeFilter(e.target.value)}\n      />\n    </Label>\n  </PopFilter>\n);\n\nContactFilter.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape([]).isRequired).isRequired,\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    CHANGE_FILTER: (state, { payload }) => payload,\n  },\n});\n\nexport const { CHANGE_FILTER: changeFilter } = filterSlice.actions;\n\nexport default filterSlice.reducer;\n","import { connect } from 'react-redux';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport { changeFilter } from '../../redux/filter/filterSlice';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\nimport getFilter from '../../redux/filter/filterSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\n\nexport const PhonebookContainer = styled.div`\n  max-width: 400px;\n  min-width: 310px;\n  margin: 0 auto;\n  padding: 0 5px;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const PhonebookSubTitle = styled.h2`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const Notification = styled(ToastContainer)`\n  top: -5px;\n  right: 37%;\n  padding: 6px 4px;\n  margin: 0;\n  width: 210px;\n  .Toastify__close-button {\n    display: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst SlideTitle = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 500,\n})`\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n`;\n\nexport default SlideTitle;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from '../Containers/FormContainer';\nimport ContactList from '../Containers/ContactListContainer';\nimport ContactFilter from '../Containers/ContactFilterContainer';\nimport { getFromLocaleStorage, saveToLocaleStorage } from '../../utils/helpers';\nimport {\n  PhonebookContainer,\n  PhonebookTitle,\n  PhonebookSubTitle,\n  Notification,\n} from './Phonebook.styled';\nimport SlideTitle from '../../transition/popText.transition';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Phonebook = ({ getAllContacts, contacts }) => {\n  const [showTitle, setShowTitle] = useState(false);\n\n  useEffect(() => {\n    setShowTitle(true);\n\n    const persistedContacts = getFromLocaleStorage('contacts');\n\n    if (persistedContacts) {\n      getAllContacts(persistedContacts);\n    }\n  }, [getAllContacts]);\n\n  useEffect(() => {\n    saveToLocaleStorage('contacts', contacts);\n  }, [contacts]);\n\n  return (\n    <PhonebookContainer>\n      <SlideTitle in={showTitle}>\n        <PhonebookTitle>Phonebook</PhonebookTitle>\n      </SlideTitle>\n      <ContactForm />\n      <PhonebookSubTitle>Contacts</PhonebookSubTitle>\n      <ContactFilter />\n      <ContactList />\n      <Notification autoClose={1500} />\n    </PhonebookContainer>\n  );\n};\n\nPhonebook.propTypes = {\n  getAllContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.shape([]).isRequired).isRequired,\n};\n\nexport default Phonebook;\n","import { connect } from 'react-redux';\nimport { getAllContacts } from '../../redux/contacts/contactsSlice';\nimport Phonebook from '../Phonebook/Phonebook';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = {\n  getAllContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from '../Containers/PhonebookContainer';\n\nconst App = () => <Phonebook />;\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contactsSlice';\nimport filterReducer from './filter/filterSlice';\nimport formReducer from './form/formSlice';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  form: formReducer,\n});\n\nconst store = configureStore(\n  {\n    reducer: rootReducer,\n  },\n  composeWithDevTools(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}